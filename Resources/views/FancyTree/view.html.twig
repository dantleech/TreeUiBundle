<div id="cmf_tree_{{ uniqId }}"></div>

<script type="text/javascript">
$(document).ready(function () {
    var treeEl = $('#cmf_tree_{{ uniqId }}');

    var extensions = [];

    var options = {
        source: {
            url: "{{ path('_cmf_tree_ui_children', {'cmf_tree_ui_tree_name': tree.name}) }}"
        },
        init: function () {
            {% if keyPath %}
                var tree = treeEl.fancytree('getTree');
                tree.loadKeyPath('{{ keyPath|raw }}', function (node, state) {
                    if(state == "loaded") {
                    } else if (state == "ok") {
                        node.setActive(true);
                    }
                });

                return false;
            {% endif %}
        },
        lazyload: function (e, data) {
            var childrenUrl = data.node.data.children_url;
            data.result = $.ajax({
                url: childrenUrl,
                dataType: "json"
            });
        },
        keyPathSeparator: "&",
        debugLevel: 0
    };

    {# Configure Extensions #}
    {% if options.drag_and_drop %}
        extensions.push('dnd');
        options['dnd'] = {
            preventVoidMoves: true,
            preventRecursiveMoves: true,
            autoExpandMs: 400,
            onDragStart: function (node) {
                return true;
            },
            onDragEnter: function (node, sourceNode) {
                return true;
            },
            onDrop: function (node, sourceNode, hitMode, ui, draggable) {

                var beforeInt = hitMode == 'before' ? 1 : 0;
                var params = [
                    'cmf_tree_ui_target_node_id=' + node.key,
                    'cmf_tree_ui_target_before=' + beforeInt
                ];

                var moveUrl = sourceNode.data.move_url;
                var res = $.ajax({
                    url: moveUrl + '?' + params.join('&'),
                    dataType: "json",
                    success: function (data) {
                        if (data.ok == 0) {
                            alert('Error: ' + data.message);
                        }
                    },
                });
                sourceNode.moveTo(node, hitMode);
            }
        }
    {% endif %}

    options.extensions = extensions;


    {% if options.form_input %}
        {% if options.form_input_multiple %}
            options.selectMode = 2;
        {% else %}
            options.selectMode = 1;
        {% endif %}

        options.checkbox = true;
        var form = treeEl.closest('form');
        form.submit(function() {
            var tree = treeEl.fancytree('getTree');
            var id = 'cmf_ui_tree_widget_' + tree._id;
            var inputs = tree.$container.find("div#" + id);

            if(inputs.length){
                inputs.empty();
            } else {
                inputs = $("<div>", {
                    id: id
                }).hide().appendTo(tree.$container);
            }

			var nodeList = tree.getSelectedNodes( tree.options.selectMode === 3 );

            var inputName = "{{ options.form_input_name }}";

            if (options.selectMode = 2) {
                inputName += "[]";
            }

			$.each(nodeList, function(idx, node){
				inputs.append($("<input>", {
					type: "checkbox",
                    name: inputName,
					value: node.key,
					checked: true
				}));
			});
        });
    {% endif %}

    $('#cmf_tree_{{ uniqId }}').fancytree(options);
});

</script>
